// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "frontend/graph/model"

	mock "github.com/stretchr/testify/mock"
)

// AuthProxy is an autogenerated mock type for the AuthProxy type
type AuthProxy struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: input
func (_m *AuthProxy) CreateUser(input model.ISignup) (*model.User, error) {
	ret := _m.Called(input)

	var r0 *model.User
	if rf, ok := ret.Get(0).(func(model.ISignup) *model.User); ok {
		r0 = rf(input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.ISignup) error); ok {
		r1 = rf(input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LoginUser provides a mock function with given fields: input
func (_m *AuthProxy) LoginUser(input model.ILogin) (string, error) {
	ret := _m.Called(input)

	var r0 string
	if rf, ok := ret.Get(0).(func(model.ILogin) string); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.ILogin) error); ok {
		r1 = rf(input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LogoutUser provides a mock function with given fields: id
func (_m *AuthProxy) LogoutUser(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
