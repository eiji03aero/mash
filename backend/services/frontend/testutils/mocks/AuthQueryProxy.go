// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "frontend/graph/model"

	mock "github.com/stretchr/testify/mock"
)

// AuthQueryProxy is an autogenerated mock type for the AuthQueryProxy type
type AuthQueryProxy struct {
	mock.Mock
}

// LoadUser provides a mock function with given fields: _a0
func (_m *AuthQueryProxy) LoadUser(_a0 map[string]interface{}) (*model.User, error) {
	ret := _m.Called(_a0)

	var r0 *model.User
	if rf, ok := ret.Get(0).(func(map[string]interface{}) *model.User); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]interface{}) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LoadUsers provides a mock function with given fields:
func (_m *AuthQueryProxy) LoadUsers() ([]*model.User, error) {
	ret := _m.Called()

	var r0 []*model.User
	if rf, ok := ret.Get(0).(func() []*model.User); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
